{
    "turing": "In the 1950s, Alan Turing proposed a parlor game that would come to define the goal of creating human-like artificial intelligence: could a wiley interrogator discern whom they were talking to just through posing clever questions.",
    "epic": "Despite its central importance to \abr{ai}, asking and answering questions is not a recent development---it stretches back into our collective unconcious.  Myths from several cultures connect the process of forming and answering critical questions to the process of forming identity, unlocking the secrets of the universe, and gaining intelligence.",
    "civilization": "Corruption and nepotism have been the downfall of multiple civilizations, but the administration of carefully formed questions saved the United States and China from sucumbing to these destructive forces.  This chapter reviews how the careful process of asking questions to check if people could do their jobs brough about massive social change and allowed egalitarian and professional governments to bring order to continent-spanning civilizations.",
    "ir": "Information retrieval is the foundation of many multi-billion dollar web companies from Baidu in China to Yandex in Russia to Google and Yahoo! in the US.  But none of these companies would exist without the ideas of reusable test collections and term-based queries, which came about because of a few crazy experiments that happened in a small UK University in Cranfield.  This chapter lays out the history of this methodology (which has become known as the Cranfield paradigm) and how it was used to answer questions."
    "qb": "While computer scientists were getting their feet wet answering questions, during the same period trivia enthusiasts were perfecting how to ask the perfect question.  This chapter outlines the conventions and processes of the highest form of question answering---in the biased but informed opinion of the author---variously called University Challenge, College Bowl, or Quiz Bowl and argues for why many of these processing could be a part of creating data for computer question answering.",
    "watson": "It's been nearly a decade since IBM Watson crushed two puny humans on Jeopardy!  Some people took that to mean that computers were definitively better than humans at trivia.  But that isn't the complete answer---this chapter, inspired by Jeopardy!'s gimmick of responding to answers to questions, questions some of the ``answers'' that emerged from IBM's tour de force.",
    "datasets_found": "The cliche is that data are the new oil, powering \abr{ai}.  Fortunately, because humans naturally ask questions, there are many datasets that we can find 'for free'.  However, these datasets still come at a cost: many of these datasets have inherent problems (e.g., ambiguities and false presuppositions) or oddities (only talking about American men) that make them difficult to use for question answering.",
    "datasets_constructed": "If you can't find the data you need, build it yourself.  But this is not always a perfect solution.  This chapter discusses the datasets that people have built and the problems that this can create.",
    "methods_kb": "The first question answering approaches were about extracting specific nuggets from a database using natural language.  These first approaches are not just historically important but are still influencing many question answering approaches of today.  This chapter reviews how we can turn natural language queries into actionable queries in databases.",
    "methods_mr": "However, putting information in a database is difficult and time-consuming\dots not all information is in a database (indeed, some information defies strict database schemas).  Thus, we need to teach computers how to read.  This chapter reviews the process of ``machine reading'', where computers find information in a large text corpus and then extracts the answer from it.",
    "methods_deep_retrieval": "As deep learning became practical, the field has moved from representing text with discrete words to continuous vectors.  This is also the case for question answering.  This chapter reviews how these representations can help us find relevant answers to questions.",
    "methods_generation": "The deep learning revolution not just helps us find answers but to generate them.  This chapter talks about the promise and peril of these approaches: how we can synthesize much richer information, make stuff up, encourage these agents to bow to our wishes, and how it's hard to tell if an answer is any good."
}
